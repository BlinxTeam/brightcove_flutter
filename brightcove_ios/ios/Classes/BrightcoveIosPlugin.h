// Autogenerated from Pigeon (v4.2.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, DataSourceType) {
  DataSourceTypeVideoById = 0,
  DataSourceTypePlaylistById = 1,
};

@class TextureMessage;
@class VolumeMessage;
@class PositionMessage;
@class PlayMessage;

@interface TextureMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPlayerId:(NSString *)playerId;
@property(nonatomic, copy) NSString * playerId;
@end

@interface VolumeMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPlayerId:(NSString *)playerId
    volume:(NSNumber *)volume;
@property(nonatomic, copy) NSString * playerId;
@property(nonatomic, strong) NSNumber * volume;
@end

@interface PositionMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPlayerId:(NSString *)playerId
    position:(NSNumber *)position;
@property(nonatomic, copy) NSString * playerId;
@property(nonatomic, strong) NSNumber * position;
@end

@interface PlayMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithAccount:(NSString *)account
    policy:(NSString *)policy
    dataSource:(NSString *)dataSource
    catalogBaseUrl:(nullable NSString *)catalogBaseUrl
    dataSourceType:(DataSourceType)dataSourceType;
@property(nonatomic, copy) NSString * account;
@property(nonatomic, copy) NSString * policy;
@property(nonatomic, copy) NSString * dataSource;
@property(nonatomic, copy, nullable) NSString * catalogBaseUrl;
@property(nonatomic, assign) DataSourceType dataSourceType;
@end

/// The codec used by BrightcoveVideoPlayerApi.
NSObject<FlutterMessageCodec> *BrightcoveVideoPlayerApiGetCodec(void);

@protocol BrightcoveVideoPlayerApi
- (void)initializeWithError:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable TextureMessage *)createMsg:(PlayMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disposeMsg:(TextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVolumeMsg:(VolumeMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)enterPictureInPictureModeMsg:(TextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)playMsg:(TextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pauseMsg:(TextureMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
- (void)seekToMsg:(PositionMessage *)msg error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BrightcoveVideoPlayerApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<BrightcoveVideoPlayerApi> *_Nullable api);

NS_ASSUME_NONNULL_END
